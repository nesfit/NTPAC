akka {
  stdout-loglevel = INFO
  loglevel = INFO
  
  actor {
    provider = cluster
    serializers {
      messagepack = "Akka.Serialization.MessagePack.MsgPackSerializer, Akka.Serialization.MessagePack"
      bytes = "Akka.Serialization.ByteArraySerializer"
      hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
    }
    serialization-bindings {
      "NTPAC.Messages.Sharding.ReassemblerEntityMessageEnvelope, NTPAC.ConversationTracking.Messages" = messagepack
      "NTPAC.Messages.RawPacket.RawPacketBatchRequest, NTPAC.ConversationTracking.Messages" = messagepack
      "NTPAC.Messages.RawPacket.RawPacketBatchAck, NTPAC.ConversationTracking.Messages" = messagepack
      "System.Object" = hyperion
    }
  }
    
  remote {
    dot-netty.tcp {
      port = 0
      hostname = 127.0.0.1
      maximum-frame-size = 500000
    }
  }
  cluster {
    auto-down-unreachable-after = 10s
    seed-nodes = ["akka.tcp://NTPAC-Cluster@127.0.0.1:7070"]
    roles = ["reassembler"]
  }
  
  raw-packet-batch-request-priority-mailbox {
    mailbox-type: "NTPAC.ConversationTracking.Actors.Mailboxes.RawPacketBatchRequestPriorityMailbox, NTPAC.ConversationTracking.Actors"
  }
}
